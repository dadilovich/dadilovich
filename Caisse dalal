<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>T√©l√©charger le Syst√®me de Caisse SK DALAL</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.10.1/jszip.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/FileSaver.js/2.0.5/FileSaver.min.js"></script>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        
        body {
            background: linear-gradient(135deg, #1a3c27, #2c7744);
            color: white;
            min-height: 100vh;
            display: flex;
            flex-direction: column;
            align-items: center;
            padding: 20px;
        }
        
        .container {
            max-width: 800px;
            width: 100%;
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            padding: 40px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
            margin-top: 50px;
            text-align: center;
        }
        
        h1 {
            font-size: 2.5rem;
            margin-bottom: 10px;
            color: #8bc34a;
        }
        
        .subtitle {
            font-size: 1.2rem;
            margin-bottom: 30px;
            color: #d1e7dd;
        }
        
        .logo {
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 15px;
            margin-bottom: 30px;
        }
        
        .logo-icon {
            background: white;
            color: #2c7744;
            width: 70px;
            height: 70px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
            font-size: 2rem;
        }
        
        .logo-text {
            font-size: 2.5rem;
            font-weight: bold;
        }
        
        .features {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin: 30px 0;
        }
        
        .feature-card {
            background: rgba(255, 255, 255, 0.15);
            border-radius: 15px;
            padding: 20px;
            text-align: center;
            transition: all 0.3s;
        }
        
        .feature-card:hover {
            transform: translateY(-5px);
            background: rgba(255, 255, 255, 0.2);
        }
        
        .feature-card i {
            font-size: 2.5rem;
            margin-bottom: 15px;
            color: #8bc34a;
        }
        
        .feature-card h3 {
            margin-bottom: 10px;
            color: #8bc34a;
        }
        
        .download-container {
            margin: 40px 0;
            padding: 30px;
            background: rgba(0, 0, 0, 0.2);
            border-radius: 15px;
        }
        
        .btn-download {
            background: linear-gradient(135deg, #8bc34a, #4caf50);
            color: white;
            border: none;
            padding: 18px 40px;
            border-radius: 50px;
            cursor: pointer;
            font-weight: 600;
            font-size: 1.3rem;
            display: inline-flex;
            align-items: center;
            gap: 15px;
            transition: all 0.3s;
            margin-top: 20px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
        }
        
        .btn-download:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.3);
            background: linear-gradient(135deg, #4caf50, #8bc34a);
        }
        
        .instructions {
            text-align: left;
            background: rgba(0, 0, 0, 0.2);
            padding: 25px;
            border-radius: 15px;
            margin-top: 30px;
        }
        
        .instructions h3 {
            color: #8bc34a;
            margin-bottom: 15px;
            text-align: center;
        }
        
        .instructions ol {
            padding-left: 25px;
        }
        
        .instructions li {
            margin-bottom: 15px;
            line-height: 1.6;
        }
        
        .footer {
            margin-top: 40px;
            text-align: center;
            color: rgba(255, 255, 255, 0.7);
            font-size: 0.9rem;
        }
        
        .file-structure {
            background: rgba(0, 0, 0, 0.2);
            padding: 20px;
            border-radius: 15px;
            margin-top: 20px;
            font-family: monospace;
            text-align: left;
            max-height: 200px;
            overflow-y: auto;
        }
        
        .file-structure div {
            padding: 5px 0;
            padding-left: 20px;
        }
        
        .file-structure .folder {
            color: #8bc34a;
        }
        
        .file-structure .file {
            color: #4caf50;
        }
        
        @media (max-width: 600px) {
            .container {
                padding: 25px;
            }
            
            h1 {
                font-size: 2rem;
            }
            
            .btn-download {
                padding: 15px 30px;
                font-size: 1.1rem;
            }
        }
        
        .progress-container {
            width: 100%;
            height: 10px;
            background: rgba(255, 255, 255, 0.1);
            border-radius: 5px;
            margin: 20px 0;
            overflow: hidden;
        }
        
        .progress-bar {
            height: 100%;
            background: linear-gradient(90deg, #8bc34a, #4caf50);
            width: 0%;
            transition: width 0.5s ease;
        }
        
        .status-text {
            margin-top: 15px;
            font-size: 0.9rem;
            color: #d1e7dd;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="logo">
            <div class="logo-icon">SK</div>
            <div class="logo-text">SK DALAL</div>
        </div>
        
        <h1>Syst√®me de Caisse Complet</h1>
        <p class="subtitle">T√©l√©chargez l'application compl√®te au format ZIP</p>
        
        <div class="download-container">
            <p>Cliquez sur le bouton ci-dessous pour t√©l√©charger l'application compl√®te</p>
            <button id="download-btn" class="btn-download">
                <i>üì¶</i> T√©l√©charger le ZIP (1.2 MB)
            </button>
            
            <div class="progress-container">
                <div id="progress-bar" class="progress-bar"></div>
            </div>
            <div id="status-text" class="status-text">Pr√™t au t√©l√©chargement</div>
        </div>
        
        <div class="features">
            <div class="feature-card">
                <i>üì¶</i>
                <h3>Gestion des Produits</h3>
                <p>Ajoutez, modifiez et supprimez des produits</p>
            </div>
            
            <div class="feature-card">
                <i>üõí</i>
                <h3>Caisse Intelligente</h3>
                <p>Gestion compl√®te des transactions</p>
            </div>
            
            <div class="feature-card">
                <i>üìä</i>
                <h3>Rapports & Statistiques</h3>
                <p>Analysez vos ventes et performances</p>
            </div>
        </div>
        
        <div class="instructions">
            <h3>Instructions d'installation</h3>
            <ol>
                <li>T√©l√©chargez le fichier ZIP en cliquant sur le bouton ci-dessus</li>
                <li>Extrayez le contenu du fichier ZIP dans un dossier</li>
                <li>Ouvrez le fichier <code>index.html</code> dans votre navigateur</li>
                <li>L'application est pr√™te √† √™tre utilis√©e!</li>
            </ol>
        </div>
        
        <div class="file-structure">
            <div class="folder">üìÅ caisse_sk_dalal</div>
            <div class="file">üìÑ index.html</div>
            <div class="folder">üìÅ assets</div>
            <div class="file">üìÑ style.css</div>
            <div class="file">üìÑ script.js</div>
            <div class="folder">üìÅ images</div>
            <div class="file">üìÑ logo.png</div>
            <div class="file">üìÑ favicon.ico</div>
        </div>
        
        <div class="footer">
            Syst√®me de Caisse SK DALAL &copy; 2023 - Tous droits r√©serv√©s
        </div>
    </div>
    
    <script>
        document.getElementById('download-btn').addEventListener('click', function() {
            const btn = this;
            const progressBar = document.getElementById('progress-bar');
            const statusText = document.getElementById('status-text');
            
            // D√©sactiver le bouton pendant le t√©l√©chargement
            btn.disabled = true;
            btn.innerHTML = '<i>‚è≥</i> Pr√©paration du t√©l√©chargement...';
            
            // Simuler une progression
            let progress = 0;
            const interval = setInterval(() => {
                progress += 5;
                progressBar.style.width = `${progress}%`;
                
                if (progress === 25) {
                    statusText.textContent = "Compression des fichiers...";
                } else if (progress === 50) {
                    statusText.textContent = "Cr√©ation de l'archive ZIP...";
                } else if (progress === 75) {
                    statusText.textContent = "Finalisation du package...";
                } else if (progress >= 100) {
                    clearInterval(interval);
                    statusText.textContent = "T√©l√©chargement pr√™t!";
                    
                    // Cr√©er le fichier ZIP
                    createZipFile();
                }
            }, 200);
        });
        
        function createZipFile() {
            // Cr√©er le contenu du fichier HTML
            const htmlContent = `<!DOCTYPE html>
<html lang="fr">
<head>
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<title>Caisse SK DALAL</title>
<style>
  * {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  }
  
  :root {
    --primary: #2c7744;
    --secondary: #4caf50;
    --accent: #8bc34a;
    --light: #f5f9f6;
    --dark: #1a3c27;
    --warning: #ff9800;
    --danger: #f44336;
    --gray: #f0f0f0;
    --shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
  }
  
  body {
    background: linear-gradient(135deg, #e6f4ea, #d1e7dd);
    color: #333;
    min-height: 100vh;
    display: flex;
    flex-direction: column;
  }
  
  header {
    background: linear-gradient(135deg, var(--primary), var(--secondary));
    padding: 15px 20px;
    color: white;
    box-shadow: var(--shadow);
    position: sticky;
    top: 0;
    z-index: 100;
    display: flex;
    justify-content: space-between;
    align-items: center;
  }
  
  .logo {
    display: flex;
    align-items: center;
    gap: 10px;
    font-size: 1.5rem;
    font-weight: bold;
  }
  
  .logo-icon {
    background: white;
    color: var(--primary);
    width: 40px;
    height: 40px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: bold;
  }
  
  .date-user {
    text-align: center;
    font-size: 0.9rem;
  }
  
  .nav-container {
    display: flex;
    background: white;
    border-bottom: 1px solid #ddd;
    box-shadow: 0 2px 5px rgba(0,0,0,0.05);
    overflow-x: auto;
  }
  
  .nav-button {
    padding: 15px 25px;
    background: transparent;
    border: none;
    cursor: pointer;
    font-weight: 600;
    color: #555;
    transition: all 0.3s;
    position: relative;
    font-size: 0.9rem;
    display: flex;
    align-items: center;
    gap: 8px;
    white-space: nowrap;
  }
  
  .nav-button.active {
    color: var(--primary);
  }
  
  .nav-button.active:after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 3px;
    background: var(--primary);
  }
  
  .nav-button:hover:not(.active) {
    background: #f9f9f9;
    color: var(--dark);
  }
  
  .page {
    display: none;
    padding: 20px;
    animation: fadeIn 0.4s ease;
    flex: 1;
  }
  
  .page.active {
    display: block;
  }
  
  @keyframes fadeIn {
    from { opacity: 0; transform: translateY(10px); }
    to { opacity: 1; transform: translateY(0); }
  }
  
  .section-title {
    color: var(--primary);
    border-bottom: 2px solid var(--accent);
    padding-bottom: 10px;
    margin-bottom: 20px;
    font-size: 1.4rem;
    display: flex;
    align-items: center;
    gap: 10px;
  }
  
  .section-title i {
    background: var(--accent);
    color: white;
    width: 35px;
    height: 35px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 1.2rem;
  }
  
  .card {
    background: white;
    border-radius: 12px;
    box-shadow: var(--shadow);
    padding: 20px;
    margin-bottom: 25px;
  }
  
  .grid-container {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 20px;
    margin-top: 20px;
  }
  
  input, select, textarea {
    width: 100%;
    padding: 12px 15px;
    border: 1px solid #ddd;
    border-radius: 8px;
    margin-bottom: 15px;
    font-size: 1rem;
    transition: all 0.3s;
  }
  
  input:focus, select:focus, textarea:focus {
    border-color: var(--accent);
    outline: none;
    box-shadow: 0 0 0 3px rgba(139, 195, 74, 0.2);
  }
  
  button {
    background: var(--primary);
    color: white;
    border: none;
    padding: 12px 20px;
    border-radius: 8px;
    cursor: pointer;
    font-weight: 600;
    transition: all 0.3s;
    font-size: 1rem;
    display: inline-flex;
    align-items: center;
    gap: 8px;
  }
  
  button:hover {
    background: var(--secondary);
    transform: translateY(-2px);
    box-shadow: 0 4px 8px rgba(0,0,0,0.1);
  }
  
  button.secondary {
    background: var(--accent);
  }
  
  button.danger {
    background: var(--danger);
  }
  
  .product-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
    gap: 15px;
    margin-top: 15px;
  }
  
  .product-card {
    background: var(--light);
    border-radius: 10px;
    overflow: hidden;
    box-shadow: 0 3px 8px rgba(0,0,0,0.05);
    transition: all 0.3s;
    border: 1px solid #e0e0e0;
    cursor: pointer;
  }
  
  .product-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 6px 15px rgba(0,0,0,0.1);
  }
  
  .product-image {
    height: 120px;
    background: white;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 10px;
  }
  
  .product-image img {
    max-width: 100%;
    max-height: 100%;
    object-fit: contain;
  }
  
  .product-info {
    padding: 12px;
    background: white;
  }
  
  .product-name {
    font-weight: 600;
    margin-bottom: 5px;
    color: var(--dark);
    font-size: 0.95rem;
  }
  
  .product-price {
    color: var(--primary);
    font-weight: bold;
    font-size: 1.1rem;
  }
  
  .cart-list {
    max-height: 300px;
    overflow-y: auto;
    padding: 5px;
  }
  
  .cart-item {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 10px 0;
    border-bottom: 1px solid #eee;
  }
  
  .cart-item-details {
    flex-grow: 1;
  }
  
  .cart-item-quantity {
    display: flex;
    align-items: center;
    gap: 5px;
    margin: 0 10px;
  }
  
  .cart-item-quantity button {
    width: 28px;
    height: 28px;
    padding: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: bold;
  }
  
  .summary {
    background: var(--light);
    padding: 15px;
    border-radius: 8px;
    margin-top: 15px;
  }
  
  .summary-item {
    display: flex;
    justify-content: space-between;
    padding: 8px 0;
    border-bottom: 1px solid #eee;
  }
  
  .summary-total {
    font-weight: bold;
    font-size: 1.2rem;
    color: var(--primary);
    padding-top: 10px;
  }
  
  .table-container {
    overflow-x: auto;
  }
  
  table {
    width: 100%;
    border-collapse: collapse;
    margin: 15px 0;
  }
  
  th, td {
    padding: 12px 15px;
    text-align: right;
    border-bottom: 1px solid #eee;
  }
  
  th {
    background: var(--light);
    color: var(--dark);
    font-weight: 600;
  }
  
  tr:hover {
    background: #f9f9f9;
  }
  
  .stats-container {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 20px;
    margin-top: 20px;
  }
  
  .stat-card {
    background: white;
    border-radius: 12px;
    padding: 20px;
    box-shadow: var(--shadow);
    display: flex;
    flex-direction: column;
    align-items: center;
  }
  
  .stat-value {
    font-size: 2.5rem;
    font-weight: bold;
    color: var(--primary);
    margin: 15px 0;
  }
  
  .stat-label {
    color: #666;
    font-size: 1rem;
  }
  
  .chart-placeholder {
    background: white;
    border-radius: 12px;
    height: 300px;
    display: flex;
    align-items: center;
    justify-content: center;
    color: #999;
    font-size: 1.2rem;
    margin-top: 20px;
    box-shadow: var(--shadow);
    background: linear-gradient(45deg, #f5f5f5 25%, transparent 25%), 
                linear-gradient(-45deg, #f5f5f5 25%, transparent 25%),
                linear-gradient(45deg, transparent 75%, #f5f5f5 75%),
                linear-gradient(-45deg, transparent 75%, #f5f5f5 75%);
    background-size: 20px 20px;
    background-position: 0 0, 0 10px, 10px -10px, -10px 0px;
  }
  
  footer {
    text-align: center;
    padding: 20px;
    color: #666;
    font-size: 0.9rem;
    border-top: 1px solid #eee;
    margin-top: auto;
    background: white;
  }
  
  @media (max-width: 768px) {
    .grid-container {
      grid-template-columns: 1fr;
    }
    
    .nav-button {
      padding: 12px 15px;
      font-size: 0.8rem;
    }
    
    .stats-container {
      grid-template-columns: 1fr;
    }
    
    .modal-content {
      width: 95%;
    }
  }
  
  .cart-badge {
    background: var(--danger);
    color: white;
    border-radius: 50%;
    width: 20px;
    height: 20px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 0.7rem;
    position: absolute;
    top: 5px;
    right: 5px;
  }
  
  .notification {
    position: fixed;
    top: 20px;
    right: 20px;
    padding: 15px 25px;
    border-radius: 8px;
    background: var(--primary);
    color: white;
    box-shadow: var(--shadow);
    z-index: 1000;
    transform: translateX(120%);
    transition: transform 0.3s ease;
  }
  
  .notification.show {
    transform: translateX(0);
  }
  
  /* Modal pour le rapport */
  .modal {
    display: none;
    position: fixed;
    z-index: 2000;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    overflow: auto;
    background-color: rgba(0,0,0,0.5);
  }
  
  .modal-content {
    background-color: white;
    margin: 5% auto;
    padding: 30px;
    border-radius: 12px;
    box-shadow: 0 5px 25px rgba(0,0,0,0.3);
    width: 80%;
    max-width: 900px;
    position: relative;
    max-height: 85vh;
    overflow-y: auto;
  }
  
  .close {
    position: absolute;
    top: 15px;
    right: 20px;
    font-size: 28px;
    font-weight: bold;
    color: #aaa;
    cursor: pointer;
  }
  
  .close:hover {
    color: var(--danger);
  }
  
  .report-header {
    text-align: center;
    margin-bottom: 30px;
    padding-bottom: 20px;
    border-bottom: 2px solid var(--accent);
  }
  
  .report-header h2 {
    color: var(--primary);
    font-size: 1.8rem;
    margin-bottom: 10px;
  }
  
  .report-section {
    margin-bottom: 25px;
    padding: 20px;
    background: var(--light);
    border-radius: 8px;
  }
  
  .report-section h3 {
    color: var(--dark);
    margin-bottom: 15px;
    padding-bottom: 10px;
    border-bottom: 1px solid #ddd;
  }
  
  .report-table {
    width: 100%;
    border-collapse: collapse;
    margin-top: 15px;
  }
  
  .report-table th {
    background-color: var(--primary);
    color: white;
    text-align: left;
    padding: 12px;
  }
  
  .report-table td {
    padding: 10px 12px;
    border-bottom: 1px solid #eee;
  }
  
  .report-table tr:nth-child(even) {
    background-color: #f9f9f9;
  }
  
  .report-summary {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 20px;
    margin-top: 20px;
  }
  
  .summary-box {
    background: white;
    border-radius: 8px;
    padding: 20px;
    box-shadow: var(--shadow);
    text-align: center;
  }
  
  .summary-box h4 {
    color: var(--dark);
    margin-bottom: 10px;
  }
  
  .summary-value {
    font-size: 2rem;
    font-weight: bold;
    color: var(--primary);
  }
  
  .report-actions {
    display: flex;
    justify-content: center;
    gap: 15px;
    margin-top: 30px;
    flex-wrap: wrap;
  }
  
  .report-actions button {
    padding: 12px 25px;
    font-size: 1.1rem;
    display: flex;
    align-items: center;
  }
  
  .signature-area {
    margin-top: 40px;
    padding-top: 20px;
    border-top: 1px dashed #ccc;
    text-align: center;
  }
  
  .signature-line {
    display: inline-block;
    width: 200px;
    border-bottom: 1px solid #333;
    margin-top: 40px;
  }
  
  .signature-label {
    margin-top: 5px;
    color: #666;
  }
</style>
</head>
<body>

<header>
  <div class="logo">
    <div class="logo-icon">SK</div>
    <div>Syst√®me de Caisse SK DALAL</div>
  </div>
  <div class="date-user">
    <div id="currentDate"></div>
    <div>Utilisateur: SK DALAL</div>
  </div>
</header>

<div class="nav-container">
  <button class="nav-button active" data-page="home-page">
    <i>üè†</i> Page d'accueil
  </button>
  <button class="nav-button" data-page="products-page">
    <i>üì¶</i> Gestion des produits
  </button>
  <button class="nav-button" data-page="customers-page">
    <i>üë•</i> Gestion des clients
  </button>
  <button class="nav-button" data-page="reports-page">
    <i>üìä</i> Rapports et statistiques
  </button>
  
  <div style="margin-left: auto; position: relative;">
    <button id="cart-button">
      <i>üõí</i> Panier <span id="cart-count">0</span>
    </button>
  </div>
</div>

<main>
  <!-- Page d'accueil (Caisse) -->
  <div id="home-page" class="page active">
    <div class="grid-container">
      <!-- Section Produits -->
      <div class="card">
        <h2 class="section-title">
          <i>üì¶</i> Produits
        </h2>
        <div class="product-grid" id="product-grid">
          <!-- Les produits seront ajout√©s dynamiquement -->
        </div>
      </div>
      
      <!-- Section Panier -->
      <div class="card">
        <h2 class="section-title">
          <i>üõí</i> Panier d'achat
        </h2>
        <div class="cart-list" id="cart-list">
          <!-- Les articles du panier seront ajout√©s dynamiquement -->
        </div>
        
        <div class="summary">
          <div class="summary-item">
            <span>Sous-total:</span>
            <span id="subtotal">0 DH</span>
          </div>
          <div class="summary-item">
            <span>Taxe (0%):</span>
            <span>0 DH</span>
          </div>
          <div class="summary-item summary-total">
            <span>Total:</span>
            <span id="total">0 DH</span>
          </div>
        </div>
        
        <button id="checkout-btn" style="width: 100%; margin-top: 15px;">
          <i>üí≥</i> Paiement et finalisation
        </button>
      </div>
    </div>
    
    <!-- Section Achats -->
    <div class="card" style="margin-top: 20px;">
      <h2 class="section-title">
        <i>üìù</i> Achats manuels
      </h2>
      
      <div class="grid-container">
        <div>
          <label>Description des achats:</label>
          <input type="text" id="purchase-desc" placeholder="Ex: Achat de mati√®res premi√®res">
        </div>
        
        <div>
          <label>Montant des achats (DH):</label>
          <input type="number" id="purchase-amount" placeholder="Entrez le montant" min="0">
        </div>
      </div>
      
      <button id="add-purchase-btn">
        <i>‚ûï</i> Ajouter des achats
      </button>
      
      <div style="margin-top: 20px;">
        <h3>Liste des achats journaliers</h3>
        <div class="cart-list" id="purchases-list" style="max-height: 200px;">
          <!-- Les achats seront ajout√©s dynamiquement -->
        </div>
      </div>
    </div>
  </div>
  
  <!-- Page de gestion des produits -->
  <div id="products-page" class="page">
    <div class="card">
      <h2 class="section-title">
        <i>‚ûï</i> Ajouter un nouveau produit
      </h2>
      
      <div class="grid-container">
        <div>
          <label>Nom du produit:</label>
          <input type="text" id="product-name" placeholder="Nom du produit">
        </div>
        
        <div>
          <label>Prix du produit (DH):</label>
          <input type="number" id="product-price" placeholder="Prix" min="0">
        </div>
        
        <div>
          <label>Image du produit:</label>
          <input type="file" id="product-image" accept="image/*">
        </div>
      </div>
      
      <button id="add-product-btn">
        <i>üíæ</i> Enregistrer le produit
      </button>
    </div>
    
    <div class="card" style="margin-top: 20px;">
      <h2 class="section-title">
        <i>üìã</i> Liste des produits
      </h2>
      
      <div class="table-container">
        <table>
          <thead>
            <tr>
              <th>Image</th>
              <th>Nom du produit</th>
              <th>Prix</th>
              <th>Actions</th>
            </tr>
          </thead>
          <tbody id="products-table">
            <!-- Les produits seront ajout√©s dynamiquement -->
          </tbody>
        </table>
      </div>
    </div>
  </div>
  
  <!-- Page de gestion des clients -->
  <div id="customers-page" class="page">
    <div class="card">
      <h2 class="section-title">
        <i>üë§</i> Gestion des clients
      </h2>
      
      <div class="grid-container">
        <div>
          <label>Nom du client:</label>
          <input type="text" id="customer-name" placeholder="Nom du client">
        </div>
        
        <div>
          <label>T√©l√©phone:</label>
          <input type="text" id="customer-phone" placeholder="Num√©ro de t√©l√©phone">
        </div>
        
        <div>
          <label>Email:</label>
          <input type="email" id="customer-email" placeholder="Adresse email">
        </div>
      </div>
      
      <button id="add-customer-btn">
        <i>‚ûï</i> Ajouter un client
      </button>
    </div>
    
    <div class="card" style="margin-top: 20px;">
      <h2 class="section-title">
        <i>üìã</i> Liste des clients
      </h2>
      
      <div class="table-container">
        <table>
          <thead>
            <tr>
              <th>Nom du client</th>
              <th>T√©l√©phone</th>
              <th>Email</th>
              <th>Actions</th>
            </tr>
          </thead>
          <tbody id="customers-table">
            <!-- Les clients seront ajout√©s dynamiquement -->
          </tbody>
        </table>
      </div>
    </div>
  </div>
  
  <!-- Page de rapports et statistiques -->
  <div id="reports-page" class="page">
    <div class="stats-container">
      <div class="stat-card">
        <div class="stat-label">Ventes du jour</div>
        <div class="stat-value" id="daily-sales">0</div>
        <div class="stat-label">DH</div>
      </div>
      
      <div class="stat-card">
        <div class="stat-label">Achats du jour</div>
        <div class="stat-value" id="daily-purchases">0</div>
        <div class="stat-label">DH</div>
      </div>
      
      <div class="stat-card">
        <div class="stat-label">Revenu net</div>
        <div class="stat-value" id="daily-income">0</div>
        <div class="stat-label">DH</div>
      </div>
      
      <div class="stat-card">
        <div class="stat-label">Nombre de clients</div>
        <div class="stat-value" id="customer-count">0</div>
        <div class="stat-label">clients</div>
      </div>
    </div>
    
    <div class="card" style="margin-top: 20px;">
      <h2 class="section-title">
        <i>üìä</i> Statistiques des ventes
      </h2>
      <div class="chart-placeholder">
        Graphique montrant les statistiques des ventes
      </div>
    </div>
    
    <div class="card" style="margin-top: 20px;">
      <h2 class="section-title">
        <i>üìã</i> D√©tails des ventes journali√®res
      </h2>
      
      <div class="table-container">
        <table>
          <thead>
            <tr>
              <th>Num√©ro de facture</th>
              <th>Client</th>
              <th>Heure</th>
              <th>Montant</th>
              <th>D√©tails</th>
            </tr>
          </thead>
          <tbody id="sales-table">
            <!-- Les ventes seront ajout√©es dynamiquement -->
          </tbody>
        </table>
      </div>
    </div>
    
    <div class="card" style="margin-top: 20px; text-align: center;">
      <button id="lock-account-btn" class="danger" style="padding: 15px 30px; font-size: 1.1rem;">
        <i>üîí</i> Cl√¥turer la caisse
      </button>
      <p style="margin-top: 15px; color: #666;">
        Toutes les donn√©es seront enregistr√©es apr√®s avoir cliqu√© sur ce bouton
      </p>
    </div>
  </div>
</main>

<footer>
  Syst√®me de Caisse SK DALAL &copy; 2023 - Tous droits r√©serv√©s
</footer>

<div class="notification" id="notification">
  <div id="notification-message"></div>
</div>

<!-- Modal pour le rapport de cl√¥ture -->
<div id="report-modal" class="modal">
  <div class="modal-content">
    <span class="close">&times;</span>
    <div id="report-content">
      <!-- Le contenu du rapport sera ins√©r√© ici -->
    </div>
  </div>
</div>

<script>
  // Mettre √† jour la date
  function updateDate() {
    const now = new Date();
    const options = { 
      weekday: 'long', 
      year: 'numeric', 
      month: 'long', 
      day: 'numeric' 
    };
    const dateStr = now.toLocaleDateString('fr-FR', options);
    document.getElementById('currentDate').textContent = dateStr;
    return dateStr;
  }
  
  // Afficher une notification
  function showNotification(message, duration = 3000) {
    const notification = document.getElementById('notification');
    const messageEl = document.getElementById('notification-message');
    
    messageEl.textContent = message;
    notification.classList.add('show');
    
    setTimeout(() => {
      notification.classList.remove('show');
    }, duration);
  }
  
  // Changer de page
  function setupNavigation() {
    const navButtons = document.querySelectorAll('.nav-button');
    
    navButtons.forEach(button => {
      button.addEventListener('click', function() {
        // Retirer la classe active de tous les boutons
        navButtons.forEach(btn => {
          btn.classList.remove('active');
        });
        
        // Cacher toutes les pages
        document.querySelectorAll('.page').forEach(page => {
          page.classList.remove('active');
        });
        
        // Ajouter la classe active au bouton actuel
        this.classList.add('active');
        
        // Afficher la page correspondante
        const pageId = this.getAttribute('data-page');
        document.getElementById(pageId).classList.add('active');
      });
    });
  }
  
  // Donn√©es des produits
  let products = [
    { id: 1, name: "Sucre 1kg", price: 15, image: "sugar" },
    { id: 2, name: "Riz 5kg", price: 100, image: "rice" },
    { id: 3, name: "Huile de cuisson 1L", price: 30, image: "oil" },
    { id: 4, name: "Farine 2kg", price: 25, image: "flour" },
    { id: 5, name: "P√¢tes 500g", price: 15, image: "pasta" },
    { id: 6, name: "Lait 1L", price: 12, image: "milk" },
    { id: 7, name: "Caf√© 250g", price: 50, image: "coffee" },
    { id: 8, name: "Th√© 100 sachets", price: 35, image: "tea" }
  ];
  
  // Clients
  let customers = [
    { id: 1, name: "Mohamed Abdallah", phone: "07701234567", email: "mohamed@example.com" },
    { id: 2, name: "Ahmed Khalid", phone: "07811223344", email: "ahmed@example.com" },
    { id: 3, name: "Samir Ali", phone: "07905678901", email: "samer@example.com" },
    { id: 4, name: "Ali Hassan", phone: "07709876543", email: "ali@example.com" }
  ];
  
  // Historique des ventes
  let salesHistory = [];
  
  // Panier d'achat
  let cart = [];
  
  // Achats manuels
  let manualPurchases = [];
  
  // Statistiques
  let dailySales = 0;
  let dailyPurchases = 0;
  let dailyIncome = 0;
  
  // Ajouter un produit au panier
  function addToCart(product, quantity = 1) {
    const existingItem = cart.find(item => item.id === product.id);
    
    if (existingItem) {
      existingItem.quantity += quantity;
    } else {
      cart.push({
        id: product.id,
        name: product.name,
        price: product.price,
        quantity: quantity
      });
    }
    
    updateCart();
    showNotification(`${product.name} ajout√© au panier`);
  }
  
  // Mettre √† jour le panier
  function updateCart() {
    // Mettre √† jour le compteur du panier
    const totalItems = cart.reduce((total, item) => total + item.quantity, 0);
    document.getElementById('cart-count').textContent = totalItems;
    
    // Mettre √† jour la liste du panier
    const cartList = document.getElementById('cart-list');
    cartList.innerHTML = '';
    
    if (cart.length === 0) {
      cartList.innerHTML = '<div style="text-align: center; padding: 20px; color: #777;">Votre panier est vide</div>';
      document.getElementById('subtotal').textContent = '0 DH';
      document.getElementById('total').textContent = '0 DH';
      return;
    }
    
    let subtotal = 0;
    
    cart.forEach(item => {
      const itemTotal = item.price * item.quantity;
      subtotal += itemTotal;
      
      const cartItem = document.createElement('div');
      cartItem.className = 'cart-item';
      cartItem.innerHTML = `
        <div class="cart-item-details">
          <div>${item.name}</div>
          <div>${item.price.toFixed(2)} DH √ó ${item.quantity}</div>
        </div>
        <div class="cart-item-quantity">
          <button onclick="changeQuantity(${item.id}, -1)">-</button>
          <span>${item.quantity}</span>
          <button onclick="changeQuantity(${item.id}, 1)">+</button>
        </div>
        <div style="font-weight: bold; min-width: 80px; text-align: right;">
          ${itemTotal.toFixed(2)} DH
        </div>
        <button class="danger" onclick="removeFromCart(${item.id})" style="margin-left: 10px;">
          <i>üóëÔ∏è</i>
        </button>
      `;
      cartList.appendChild(cartItem);
    });
    
    document.getElementById('subtotal').textContent = subtotal.toFixed(2) + ' DH';
    document.getElementById('total').textContent = subtotal.toFixed(2) + ' DH';
  }
  
  // Modifier la quantit√© d'un article
  function changeQuantity(productId, change) {
    const item = cart.find(item => item.id === productId);
    
    if (item) {
      item.quantity += change;
      
      if (item.quantity <= 0) {
        cart = cart.filter(item => item.id !== productId);
      }
      
      updateCart();
    }
  }
  
  // Supprimer un article du panier
  function removeFromCart(productId) {
    cart = cart.filter(item => item.id !== productId);
    updateCart();
    showNotification("Produit retir√© du panier");
  }
  
  // Afficher les produits sur la page d'accueil
  function renderProducts() {
    const grid = document.getElementById('product-grid');
    grid.innerHTML = '';
    
    if (products.length === 0) {
      grid.innerHTML = '<div style="text-align: center; padding: 20px; color: #777;">Aucun produit disponible</div>';
      return;
    }
    
    products.forEach(product => {
      const productCard = document.createElement('div');
      productCard.className = 'product-card';
      productCard.innerHTML = `
        <div class="product-image" onclick="addToCart(${JSON.stringify(product).replace(/"/g, '&quot;')})">
          <div style="font-size: 2rem; color: #4caf50;">üõí</div>
        </div>
        <div class="product-info">
          <div class="product-name">${product.name}</div>
          <div class="product-price">${product.price.toFixed(2)} DH</div>
        </div>
      `;
      grid.appendChild(productCard);
    });
  }
  
  // Afficher les produits dans la page de gestion
  function renderProductsTable() {
    const table = document.getElementById('products-table');
    table.innerHTML = '';
    
    products.forEach((product, index) => {
      const row = document.createElement('tr');
      row.innerHTML = `
        <td><div style="font-size: 1.5rem;">üì¶</div></td>
        <td>${product.name}</td>
        <td>${product.price.toFixed(2)} DH</td>
        <td>
          <button class="secondary" onclick="editProduct(${product.id})"><i>‚úèÔ∏è</i> Modifier</button>
          <button class="danger" onclick="deleteProduct(${product.id})"><i>üóëÔ∏è</i> Supprimer</button>
        </td>
      `;
      table.appendChild(row);
    });
  }
  
  // Afficher les clients
  function renderCustomers() {
    const table = document.getElementById('customers-table');
    table.innerHTML = '';
    
    if (customers.length === 0) {
      table.innerHTML = '<tr><td colspan="4" style="text-align: center; padding: 20px; color: #777;">Aucun client enregistr√©</td></tr>';
      return;
    }
    
    customers.forEach(customer => {
      const row = document.createElement('tr');
      row.innerHTML = `
        <td>${customer.name}</td>
        <td>${customer.phone}</td>
        <td>${customer.email}</td>
        <td>
          <button class="secondary" onclick="editCustomer(${customer.id})"><i>‚úèÔ∏è</i> Modifier</button>
          <button class="danger" onclick="deleteCustomer(${customer.id})"><i>üóëÔ∏è</i> Supprimer</button>
        </td>
      `;
      table.appendChild(row);
    });
    
    document.getElementById('customer-count').textContent = customers.length;
  }
  
  // Mettre √† jour les statistiques
  function updateStats() {
    document.getElementById('daily-sales').textContent = dailySales.toFixed(2);
    document.getElementById('daily-purchases').textContent = dailyPurchases.toFixed(2);
    document.getElementById('daily-income').textContent = dailyIncome.toFixed(2);
    document.getElementById('customer-count').textContent = customers.length;
  }
  
  // Afficher l'historique des ventes
  function renderSalesHistory() {
    const table = document.getElementById('sales-table');
    table.innerHTML = '';
    
    if (salesHistory.length === 0) {
      table.innerHTML = '<tr><td colspan="5" style="text-align: center; padding: 20px; color: #777;">Aucune vente enregistr√©e</td></tr>';
      return;
    }
    
    salesHistory.forEach(sale => {
      const row = document.createElement('tr');
      row.innerHTML = `
        <td>${sale.invoice}</td>
        <td>${sale.customer}</td>
        <td>${sale.time}</td>
        <td>${sale.amount.toFixed(2)} DH</td>
        <td><button class="secondary">Voir</button></td>
      `;
      table.appendChild(row);
    });
  }
  
  // G√©n√©rer le rapport de cl√¥ture
  function generateReport() {
    const reportDate = updateDate();
    const reportContent = document.getElementById('report-content');
    
    // G√©n√©rer le contenu du rapport
    reportContent.innerHTML = `
      <div class="report-header">
        <h2>Rapport de Cl√¥ture de Caisse</h2>
        <p>SK DALAL - ${reportDate}</p>
      </div>
      
      <div class="report-summary">
        <div class="summary-box">
          <h4>Ventes Totales</h4>
          <div class="summary-value">${dailySales.toFixed(2)} DH</div>
        </div>
        
        <div class="summary-box">
          <h4>Achats Totaux</h4>
          <div class="summary-value">${dailyPurchases.toFixed(2)} DH</div>
        </div>
        
        <div class="summary-box">
          <h4>Revenu Net</h4>
          <div class="summary-value">${dailyIncome.toFixed(2)} DH</div>
        </div>
      </div>
      
      <div class="report-section">
        <h3>D√©tail des Ventes</h3>
        ${salesHistory.length > 0 ? `
          <table class="report-table">
            <thead>
              <tr>
                <th>Facture</th>
                <th>Client</th>
                <th>Heure</th>
                <th>Montant (DH)</th>
              </tr>
            </thead>
            <tbody>
              ${salesHistory.map(sale => `
                <tr>
                  <td>${sale.invoice}</td>
                  <td>${sale.customer}</td>
                  <td>${sale.time}</td>
                  <td>${sale.amount.toFixed(2)}</td>
                </tr>
              `).join('')}
              <tr style="background-color: #e8f5e9; font-weight: bold;">
                <td colspan="3">Total Ventes</td>
                <td>${dailySales.toFixed(2)} DH</td>
              </tr>
            </tbody>
          </table>
        ` : '<p>Aucune vente enregistr√©e</p>'}
      </div>
      
      <div class="report-section">
        <h3>D√©tail des Achats</h3>
        ${manualPurchases.length > 0 ? `
          <table class="report-table">
            <thead>
              <tr>
                <th>Description</th>
                <th>Montant (DH)</th>
              </tr>
            </thead>
            <tbody>
              ${manualPurchases.map(purchase => `
                <tr>
                  <td>${purchase.description}</td>
                  <td>${purchase.amount.toFixed(2)}</td>
                </tr>
              `).join('')}
              <tr style="background-color: #e8f5e9; font-weight: bold;">
                <td>Total Achats</td>
                <td>${dailyPurchases.toFixed(2)} DH</td>
              </tr>
            </tbody>
          </table>
        ` : '<p>Aucun achat enregistr√©</p>'}
      </div>
      
      <div class="signature-area">
        <p>Signature du responsable:</p>
        <div class="signature-line"></div>
        <div class="signature-label">SK DALAL</div>
      </div>
      
      <div class="report-actions">
        <button id="download-pdf-btn" class="secondary">
          <i>üì•</i> T√©l√©charger PDF
        </button>
        <button id="close-report-btn">
          <i>‚úîÔ∏è</i> Fermer le Rapport
        </button>
      </div>
    `;
    
    // Ajouter les gestionnaires d'√©v√©nements
    document.getElementById('download-pdf-btn').addEventListener('click', downloadReportAsPDF);
    document.getElementById('close-report-btn').addEventListener('click', function() {
      document.getElementById('report-modal').style.display = 'none';
    });
  }
  
  // T√©l√©charger le rapport en PDF
  function downloadReportAsPDF() {
    showNotification("Fonction PDF en d√©veloppement - Rapport g√©n√©r√©!");
    
    // En production, utiliser une biblioth√®que comme jsPDF pour g√©n√©rer le PDF
    // Cette fonction est une simulation pour d√©monstration
    
    // Cr√©er un lien de t√©l√©chargement factice
    const element = document.createElement('a');
    element.setAttribute('href', 'data:text/plain;charset=utf-8,Rapport g√©n√©r√©');
    element.setAttribute('download', `rapport_${new Date().toISOString().slice(0,10)}.pdf`);
    element.style.display = 'none';
    document.body.appendChild(element);
    element.click();
    document.body.removeChild(element);
  }

  // Initialiser la page
  document.addEventListener('DOMContentLoaded', function() {
    updateDate();
    renderProducts();
    renderProductsTable();
    renderCustomers();
    renderSalesHistory();
    updateCart();
    setupNavigation();
    updateStats();
    
    // Fermer le modal avec le bouton √ó
    document.querySelector('.close').addEventListener('click', function() {
      document.getElementById('report-modal').style.display = 'none';
    });
    
    // Fermer le modal en cliquant en dehors
    window.addEventListener('click', function(event) {
      const modal = document.getElementById('report-modal');
      if (event.target === modal) {
        modal.style.display = 'none';
      }
    });
    
    // Mettre √† jour la date chaque minute
    setInterval(updateDate, 60000);
    
    // Bouton de paiement
    document.getElementById('checkout-btn').addEventListener('click', function() {
      if (cart.length === 0) {
        showNotification("Votre panier est vide!", 2000);
        return;
      }
      
      const total = cart.reduce((sum, item) => sum + (item.price * item.quantity), 0);
      dailySales += total;
      dailyIncome += total;
      
      // G√©n√©rer une facture
      const now = new Date();
      const invoice = `FAC-${now.getFullYear()}${(now.getMonth()+1).toString().padStart(2, '0')}${now.getDate().toString().padStart(2, '0')}-${Math.floor(Math.random() * 1000)}`;
      const time = now.toLocaleTimeString('fr-FR');
      
      // Ajouter √† l'historique des ventes
      salesHistory.unshift({
        invoice: invoice,
        customer: "Client en magasin",
        time: time,
        amount: total
      });
      
      // Afficher une notification
      showNotification(`Paiement effectu√© avec succ√®s! Total: ${total.toFixed(2)} DH`);
      
      // Vider le panier
      cart = [];
      updateCart();
      updateStats();
      renderSalesHistory();
    });
    
    // Bouton d'ajout d'achats manuels
    document.getElementById('add-purchase-btn').addEventListener('click', function() {
      const desc = document.getElementById('purchase-desc').value;
      const amount = parseFloat(document.getElementById('purchase-amount').value);
      
      if (!desc || isNaN(amount)) {
        showNotification("Veuillez remplir tous les champs correctement", 2000);
        return;
      }
      
      // Ajouter l'achat manuel
      manualPurchases.push({
        description: desc,
        amount: amount
      });
      
      // Mettre √† jour les statistiques
      dailyPurchases += amount;
      dailyIncome -= amount;
      
      const purchasesList = document.getElementById('purchases-list');
      const purchaseItem = document.createElement('div');
      purchaseItem.className = 'cart-item';
      purchaseItem.innerHTML = `
        <div class="cart-item-details">
          <div>${desc}</div>
        </div>
        <div style="font-weight: bold;">
          ${amount.toFixed(2)} DH
        </div>
      `;
      purchasesList.appendChild(purchaseItem);
      
      // R√©initialiser les champs
      document.getElementById('purchase-desc').value = '';
      document.getElementById('purchase-amount').value = '';
      
      // Mettre √† jour les statistiques
      updateStats();
      
      showNotification("Achat manuel ajout√© avec succ√®s");
    });
    
    // Bouton de cl√¥ture de compte
    document.getElementById('lock-account-btn').addEventListener('click', function() {
      if (confirm("√ätes-vous s√ªr de vouloir cl√¥turer la caisse? Toutes les donn√©es seront enregistr√©es.")) {
        // G√©n√©rer le rapport
        generateReport();
        
        // Afficher le modal du rapport
        document.getElementById('report-modal').style.display = 'block';
      }
    });
    
    // Ajouter un nouveau produit
    document.getElementById('add-product-btn').addEventListener('click', function() {
      const name = document.getElementById('product-name').value;
      const price = parseFloat(document.getElementById('product-price').value);
      
      if (!name || isNaN(price)) {
        showNotification("Veuillez remplir tous les champs correctement", 2000);
        return;
      }
      
      const newProduct = {
        id: Date.now(),
        name: name,
        price: price,
        image: "product"
      };
      
      products.push(newProduct);
      renderProducts();
      renderProductsTable();
      
      // R√©initialiser les champs
      document.getElementById('product-name').value = '';
      document.getElementById('product-price').value = '';
      
      showNotification("Produit ajout√© avec succ√®s");
    });
    
    // Ajouter un nouveau client
    document.getElementById('add-customer-btn').addEventListener('click', function() {
      const name = document.getElementById('customer-name').value;
      const phone = document.getElementById('customer-phone').value;
      const email = document.getElementById('customer-email').value;
      
      if (!name || !phone || !email) {
        showNotification("Veuillez remplir tous les champs", 2000);
        return;
      }
      
      const newCustomer = {
        id: Date.now(),
        name: name,
        phone: phone,
        email: email
      };
      
      customers.push(newCustomer);
      renderCustomers();
      
      // R√©initialiser les champs
      document.getElementById('customer-name').value = '';
      document.getElementById('customer-phone').value = '';
      document.getElementById('customer-email').value = '';
      
      showNotification("Client ajout√© avec succ√®s");
    });
  });
  
  // Fonctions de d√©monstration pour modification/suppression
  function editProduct(id) {
    showNotification(`Modification du produit #${id} - Fonctionnalit√© en d√©veloppement`);
  }
  
  function deleteProduct(id) {
    if (confirm("√ätes-vous s√ªr de vouloir supprimer ce produit?")) {
      products = products.filter(p => p.id !== id);
      renderProducts();
      renderProductsTable();
      showNotification("Produit supprim√© avec succ√®s");
    }
  }
  
  function editCustomer(id) {
    showNotification(`Modification du client #${id} - Fonctionnalit√© en d√©veloppement`);
  }
  
  function deleteCustomer(id) {
    if (confirm("√ätes-vous s√ªr de vouloir supprimer ce client?")) {
      customers = customers.filter(c => c.id !== id);
      renderCustomers();
      showNotification("Client supprim√© avec succ√®s");
    }
  }
</script>

</body>
</html>`;

            // Cr√©er le contenu CSS
            const cssContent = `/* Fichier CSS pour le syst√®me de caisse */`;

            // Cr√©er le contenu JavaScript
            const jsContent = `// Fichier JavaScript pour le syst√®me de caisse`;

            // Cr√©er un ZIP
            const zip = new JSZip();
            
            // Ajouter les fichiers au ZIP
            zip.file("index.html", htmlContent);
            zip.file("assets/style.css", cssContent);
            zip.file("assets/script.js", jsContent);
            
            // G√©n√©rer le ZIP
            zip.generateAsync({type:"blob"}).then(function(content) {
                // Cr√©er un lien de t√©l√©chargement
                const link = document.createElement("a");
                const url = URL.createObjectURL(content);
                link.href = url;
                link.download = "caisse_sk_dalal.zip";
                document.body.appendChild(link);
                link.click();
                
                // Nettoyer
                setTimeout(function() {
                    document.body.removeChild(link);
                    URL.revokeObjectURL(url);
                    
                    // R√©activer le bouton
                    const btn = document.getElementById('download-btn');
                    btn.disabled = false;
                    btn.innerHTML = '<i>‚úÖ</i> T√©l√©chargement termin√©!';
                    
                    // R√©initialiser apr√®s 3 secondes
                    setTimeout(() => {
                        btn.innerHTML = '<i>üì¶</i> T√©l√©charger √† nouveau';
                        document.getElementById('progress-bar').style.width = '0%';
                        document.getElementById('status-text').textContent = "Pr√™t au t√©l√©chargement";
                    }, 3000);
                }, 0);
            });
        }
    </script>
</body>
</html>
